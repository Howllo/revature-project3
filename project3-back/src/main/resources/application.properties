spring.profiles.active=default

# Database Configuration - This should be like this and get inject at CI/CD pipeline.
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT Configuration - For testing: https://jwtsecret.com/generate
jwt.secret=5f6902ba77e50013b1ef44071308afcc6f183ff1e35c7b0022184140980d461a839f915a0383f70390bbca771d2a3fff0fb50477107707d029c25cff39b0c44d3747525281711ea6ba16aaa05a857deae654901fd0e1bf4893759884f56608fb253c16db3512ee679c4004c9d50d9b7b011cfd93b5a01a5e3a3560d40cac05caf6c3a6fcc871aa3a477e80fb0b3e0a9cab91c24d336ac61fcfffdd6b517402063345ffbe3c0cbcabb8e3f9c6dbfc7cc41099d17248dfe6b46aaf1e62f51000a4ac2401570ac99e9304b3f0aca2e3d472b1e9813a34f033ec8f6c9f05b3918b3d8adae7723dda1098977e13b704e3f99a8879d1f87a897eac9d4a421b82f248301b32c85f2396e13c294d5cf5c32afe6452e815a96d90dfb3fb424f3d7e68584ec3126a325f7dd74607d002f9fd1ad12786fdb99a061ff680c53049f115a679c706518f47545e03d59eb2053102f46f7a725820bd67ab14ede9f7eba20bc7a16c1df6c7c18bae8cc8c2c3c2e4eb6bd8eca8cca1f92af1ef1fd218970a5be3753e37564ec3bb64eaf6bfb6db597da601f10fd84fcadbfba7488e3334bebdb3c30f08519c0617bb89d5cef09a2baa4d1f6e304f083c951c7240dda11cc3ce907cead421086f5de636b1d506032fe70b73acebc92502fe9aa8a3483d572668226fddc76d63e44c3ae8d2479be2974193da49ca6c005f3816ffee73aa6a2334fdb72f
jwt.expiration=86400

# For the use of Argon2 encoder.
argon2.saltLength=16
argon2.hashLength=32
argon2.parallelism=1
argon2.memory=65536
argon2.iterations=4

spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB

# Logging
logging.level.root=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
